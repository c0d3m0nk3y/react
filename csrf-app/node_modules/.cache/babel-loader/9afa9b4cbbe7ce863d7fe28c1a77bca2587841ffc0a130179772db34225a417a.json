{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ricky\\\\react\\\\csrf-app\\\\src\\\\index.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_HOST = 'http://localhost:8000';\nlet _csrfToken = null;\nasync function getCsrfToken() {\n  if (_csrfToken === null) {\n    const response = await fetch(`${API_HOST}/app/api/get-csrf-token`, {\n      credentials: 'include',\n      body: JSON.stringify({})\n    });\n    const data = await response.json();\n    _csrfToken = data.csrfToken;\n  }\n  return _csrfToken;\n}\nasync function testRequest(method) {\n  const response = await fetch(`${API_HOST}/app/api/ping`, {\n    method: method,\n    headers: method === 'POST' ? {\n      'X-CSRFToken': await getCsrfToken()\n    } : {},\n    credentials: 'include'\n  });\n  const data = await response.json();\n  return data.result;\n}\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      testGet: 'KO',\n      testPost: 'KO'\n    };\n  }\n  async componentDidMount() {\n    this.setState({\n      testGet: await testRequest('GET'),\n      testPost: await testRequest('POST')\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Test GET request: \", this.state.testGet]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Test POST request: \", this.state.testPost]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default App;\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 63,\n  columnNumber: 13\n}, this));","map":{"version":3,"names":["React","Component","ReactDOM","API_HOST","_csrfToken","getCsrfToken","response","fetch","credentials","body","JSON","stringify","data","json","csrfToken","testRequest","method","headers","result","App","constructor","props","state","testGet","testPost","componentDidMount","setState","render","root","createRoot","document","getElementById"],"sources":["C:/Users/ricky/react/csrf-app/src/index.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\n\r\nconst API_HOST = 'http://localhost:8000';\r\n\r\nlet _csrfToken = null;\r\n\r\nasync function getCsrfToken() {\r\n    if (_csrfToken === null) {\r\n        const response = await fetch(`${API_HOST}/app/api/get-csrf-token`, {\r\n            credentials: 'include',\r\n            body: JSON.stringify({})\r\n        });\r\n        const data = await response.json();\r\n        _csrfToken = data.csrfToken;\r\n    }\r\n    return _csrfToken;\r\n}\r\n\r\nasync function testRequest(method) {\r\n    const response = await fetch(`${API_HOST}/app/api/ping`, {\r\n        method: method,\r\n        headers: (\r\n            method === 'POST'\r\n                ? { 'X-CSRFToken': await getCsrfToken() }\r\n                : {}\r\n        ),\r\n        credentials: 'include',\r\n    });\r\n    const data = await response.json();\r\n    return data.result;\r\n}\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            testGet: 'KO',\r\n            testPost: 'KO',\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.setState({\r\n            testGet: await testRequest('GET'),\r\n            testPost: await testRequest('POST'),\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>Test GET request: {this.state.testGet}</p>\r\n                <p>Test POST request: {this.state.testPost}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(<App />);\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,QAAQ,MAAM,kBAAkB;AAAC;AAExC,MAAMC,QAAQ,GAAG,uBAAuB;AAExC,IAAIC,UAAU,GAAG,IAAI;AAErB,eAAeC,YAAY,GAAG;EAC1B,IAAID,UAAU,KAAK,IAAI,EAAE;IACrB,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,QAAS,yBAAwB,EAAE;MAC/DK,WAAW,EAAE,SAAS;MACtBC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC,CAAC,CAAC;IAC3B,CAAC,CAAC;IACF,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,EAAE;IAClCT,UAAU,GAAGQ,IAAI,CAACE,SAAS;EAC/B;EACA,OAAOV,UAAU;AACrB;AAEA,eAAeW,WAAW,CAACC,MAAM,EAAE;EAC/B,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,QAAS,eAAc,EAAE;IACrDa,MAAM,EAAEA,MAAM;IACdC,OAAO,EACHD,MAAM,KAAK,MAAM,GACX;MAAE,aAAa,EAAE,MAAMX,YAAY;IAAG,CAAC,GACvC,CAAC,CACV;IACDG,WAAW,EAAE;EACjB,CAAC,CAAC;EACF,MAAMI,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,EAAE;EAClC,OAAOD,IAAI,CAACM,MAAM;AACtB;AAEA,MAAMC,GAAG,SAASlB,SAAS,CAAC;EACxBmB,WAAW,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACTC,OAAO,EAAE,IAAI;MACbC,QAAQ,EAAE;IACd,CAAC;EACL;EAEA,MAAMC,iBAAiB,GAAG;IACtB,IAAI,CAACC,QAAQ,CAAC;MACVH,OAAO,EAAE,MAAMR,WAAW,CAAC,KAAK,CAAC;MACjCS,QAAQ,EAAE,MAAMT,WAAW,CAAC,MAAM;IACtC,CAAC,CAAC;EACN;EAEAY,MAAM,GAAG;IACL,oBACI;MAAA,wBACI;QAAA,WAAG,oBAAkB,EAAC,IAAI,CAACL,KAAK,CAACC,OAAO;MAAA;QAAA;QAAA;QAAA;MAAA,QAAK,eAC7C;QAAA,WAAG,qBAAmB,EAAC,IAAI,CAACD,KAAK,CAACE,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAC7C;EAEd;AACJ;AAEA,eAAeL,GAAG;AAElB,MAAMS,IAAI,GAAG1B,QAAQ,CAAC2B,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACD,MAAM,eAAC,QAAC,GAAG;EAAA;EAAA;EAAA;AAAA,QAAG,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}